<?xml version="1.0" encoding="UTF-8"?>

<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://sumo.sf.net/xsd/duarouterConfiguration.xsd">

    <configuration>
        <!-- Loads the named config on startup -->
        <configuration-file value="" synonymes="c configuration" type="FILE"/>

        <!-- Saves current configuration into FILE -->
        <save-configuration value="" synonymes="save-config" type="FILE"/>

        <!-- Saves a configuration template (empty) into FILE -->
        <save-template value="" type="FILE"/>

        <!-- Saves the configuration schema into FILE -->
        <save-schema value="" type="FILE"/>

        <!-- Adds comments to saved template, configuration, or schema -->
        <save-commented value="" synonymes="save-template.commented" type="BOOL"/>

    </configuration>

    <input>
        <!-- Use FILE as SUMO-network to route on -->
        <net-file value="" synonymes="n net" type="FILE"/>

        <!-- Read (additional) districts from FILE -->
        <taz-files value="" synonymes="d districts" type="FILE"/>

        <!-- Read alternatives from FILE -->
        <alternative-files value="" synonymes="a alternatives alternatives-files" type="FILE"/>

        <!-- Read flow-definitions from FILE(s) -->
        <flow-files value="" synonymes="f flow-definition flows" type="FILE"/>

        <!-- Read network weights from FILE(s) -->
        <weight-files value="" synonymes="w weights" type="FILE"/>

        <!-- Read lane-based network weights from FILE(s) -->
        <lane-weight-files value="" type="FILE"/>

        <!-- Name of the xml attribute which gives the edge weight -->
        <weight-attribute value="traveltime" synonymes="measure x" type="STR"/>

        <!-- Read trip-definitions from FILE(s) -->
        <trip-files value="" synonymes="t trip-defs trips" type="FILE"/>

        <!-- Read sumo-routes from FILE(s) -->
        <route-files value="" synonymes="r sumo sumo-input" type="FILE"/>

    </input>

    <output>
        <!-- Write generated routes to FILE -->
        <output-file value="" synonymes="o output" type="FILE"/>

        <!-- Write used vehicle types into separate FILE -->
        <vtype-output value="" synonymes="vtype" type="FILE"/>

        <!-- Write exit times (weights) for each edge -->
        <exit-times value="false" type="BOOL"/>

    </output>

    <processing>
        <!-- Continue if a route could not be build -->
        <ignore-errors value="false" synonymes="continue-on-unbuild" type="BOOL"/>

        <!-- Assume input is unsorted -->
        <unsorted-input value="false" synonymes="unsorted" type="BOOL"/>

        <!-- generate random departure times for flow input -->
        <randomize-flows value="false" type="BOOL"/>

        <!-- Prune the number of alternatives to INT -->
        <max-alternatives value="5" type="INT"/>

        <!-- Remove loops within the route; Remove turnarounds at start and end of the route -->
        <remove-loops value="false" type="BOOL"/>

        <!-- Tries to correct a false route -->
        <repair value="false" type="BOOL"/>

        <!-- Interpolate edge weights at interval boundaries -->
        <weights.interpolate value="false" synonymes="interpolate" type="BOOL"/>

        <!-- Use origin and destination zones (districts) for in- and output -->
        <with-taz value="false" type="BOOL"/>

        <!-- Select among routing algorithms [&apos;dijkstra&apos;, &apos;astar&apos;] -->
        <routing-algorithm value="dijkstra" type="STR"/>

        <!-- Expand weights behind the simulation&apos;s end -->
        <weights.expand value="false" synonymes="expand-weights" type="BOOL"/>

        <!-- Use FLOAT as Gawron&apos;s beta -->
        <gawron.beta value="0.3" synonymes="gBeta" type="FLOAT"/>

        <!-- Use FLOAT as Gawron&apos;s a -->
        <gawron.a value="0.05" synonymes="gA" type="FLOAT"/>

        <!-- Save routes with near zero probability -->
        <keep-all-routes value="false" type="BOOL"/>

        <!-- Only reuse routes from input, do not calculate new ones -->
        <skip-new-routes value="false" type="BOOL"/>

        <!-- Use c-logit model -->
        <logit value="false" type="BOOL"/>

        <!-- Use FLOAT as logit&apos;s beta -->
        <logit.beta value="-1" synonymes="lBeta" type="FLOAT"/>

        <!-- Use FLOAT as logit&apos;s gamma -->
        <logit.gamma value="1" synonymes="lGamma" type="FLOAT"/>

        <!-- Use FLOAT as logit&apos;s theta (negative values mean auto-estimation) -->
        <logit.theta value="-1" synonymes="lTheta" type="FLOAT"/>

    </processing>

    <defaults>
        <!-- Assigns a default depart lane -->
        <departlane value="" type="STR"/>

        <!-- Assigns a default depart position -->
        <departpos value="" type="STR"/>

        <!-- Assigns a default depart speed -->
        <departspeed value="" type="STR"/>

        <!-- Assigns a default arrival lane -->
        <arrivallane value="" type="STR"/>

        <!-- Assigns a default arrival position -->
        <arrivalpos value="" type="STR"/>

        <!-- Assigns a default arrival speed -->
        <arrivalspeed value="" type="STR"/>

        <!-- Defaults will override given values -->
        <defaults-override value="false" type="BOOL"/>

    </defaults>

    <time>
        <!-- Defines the begin time; Previous trips will be discarded -->
        <begin value="0" synonymes="b" type="TIME"/>

        <!-- Defines the end time; Later trips will be discarded; Defaults to the maximum time that SUMO can represent -->
        <end value="2147483" synonymes="e" type="TIME"/>

    </time>

    <report>
        <!-- Switches to verbose output -->
        <verbose value="false" synonymes="v" type="BOOL"/>

        <!-- Prints option values before processing -->
        <print-options value="false" synonymes="p" type="BOOL"/>

        <!-- Prints this screen -->
        <help value="false" synonymes="?" type="BOOL"/>

        <!-- Prints the current version -->
        <version value="false" synonymes="V" type="BOOL"/>

        <!-- Enable schema validation of XML inputs -->
        <xml-validation value="false" synonymes="X" type="BOOL"/>

        <!-- Disables output of warnings -->
        <no-warnings value="false" synonymes="W suppress-warnings" type="BOOL"/>

        <!-- Writes all messages to FILE (implies verbose) -->
        <log value="" synonymes="l log-file" type="FILE"/>

        <!-- Writes all non-error messages to FILE (implies verbose) -->
        <message-log value="" type="FILE"/>

        <!-- Writes all warnings and errors to FILE -->
        <error-log value="" type="FILE"/>

        <!-- Defines how often statistics shall be printed -->
        <stats-period value="-1" type="INT"/>

        <!-- Disable console output of route parsing step -->
        <no-step-log value="false" type="BOOL"/>

    </report>

    <random_number>
        <!-- Initialises the random number generator with the current system time -->
        <random value="false" synonymes="abs-rand" type="BOOL"/>

        <!-- Initialises the random number generator with the given value -->
        <seed value="23423" synonymes="srand" type="INT"/>

    </random_number>

</configuration>
